---
import DefaultLayout from '@layouts/DefaultLayout.astro'
import PageHeader from '@components/PageHeader.astro'
import { Card, Pagination } from 'accessible-astro-components'
import { getCollection } from 'astro:content'
import type { GetStaticPaths, Page } from 'astro'
import type { CollectionEntry } from 'astro:content'
import CardWrapper from '@components/CardWrapper.astro'

export const getStaticPaths = (async ({ paginate }) => {
  const projects = await getCollection('projects')

  // Dynamically import all images from the projects folder
  const images = import.meta.glob('/src/assets/images/projects/*.{png,jpg,jpeg,webp}', { eager: true })

  const projectsWithImages = projects
    .sort((a, b) => a.data.sortOrder - b.data.sortOrder)
    .map((project) => {
      const imagePath = `/src/assets/images/projects/${project.data.featuredImage}`
      const imageModule = images[imagePath]

      return {
        ...project,
        imageComponent: imageModule?.default,
      }
    })

  return paginate(projectsWithImages, { pageSize: 6 })
}) satisfies GetStaticPaths

interface Props {
  page: Page<CollectionEntry<'projects'> & { imageComponent: any }>
}

const { page } = Astro.props
---

<DefaultLayout title="Portfolio">
  <PageHeader title="Portfolio" bgType="bordered" />
  <section class="my-12">
    <div class="container">
      <p class="text-sm"><em>Project {page.start + 1} through {page.end + 1} of {page.total} total projects</em></p>
      <ul class="my-3 grid grid-cols-1 gap-12 md:grid-cols-2 lg:grid-cols-3">
        {
          page.data.map((project) => (
            <li>
              <CardWrapper>
                <Card
                  imageComponent={project.imageComponent}
                  url={'/portfolio/' + project.id.replace(/\.mdx?$/, '')}
                  title={project.data.title}
                  headingLevel="h2"
                  footer={'Platform: ' + project.data.platform}
                  fullHeight={true}
                >
                  {project.data.description}
                </Card>
              </CardWrapper>
            </li>
          ))
        }
      </ul>
      <div class="mt-12 grid place-content-center">
        <Pagination
          firstPage={page.url.prev ? '/portfolio' : null}
          previousPage={page.url.prev ? page.url.prev : null}
          nextPage={page.url.next ? page.url.next : null}
          lastPage={page.url.next ? `/portfolio/${Math.ceil(page.total / page.size)}` : null}
          currentPage={`${page.currentPage}`}
          totalPages={`${Math.ceil(page.total / page.size)}`}
          ariaLabel="Portfolio pagination"
        />
      </div>
    </div>
  </section>
</DefaultLayout>
