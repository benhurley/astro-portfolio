---
import DefaultLayout from '@layouts/DefaultLayout.astro'
import Hero from '@components/Hero.astro'
import Feature from '@components/Feature.astro'
import FeaturedProjects from '@components/FeaturedProjects.astro'
import { Heading, Link } from 'accessible-astro-components'
import { Icon } from 'astro-icon/components'
---

<DefaultLayout title="Home">
  <Hero />
  <section class="mt-24 mb-32">
    <div class="container">
      <Heading level="h2" class="mb-8">Opportunities</Heading>
      <div class="grid grid-cols-1 gap-12 md:grid-cols-2 lg:grid-cols-3">
        <Feature icon="lucide:paintbrush" title="Design">
          Wireframes, mockups, and design systems crafted for your unique brand identity.
        </Feature>
        <Feature icon="lucide:sparkles" title="UX">
          Simplify your website and remove friction so visitors can find what they need instantly.
        </Feature>
        <Feature icon="lucide:code" title="Development">
          Clean, fast, and accessible code from a senior developer with over a decade of experience.
        </Feature>
      </div>
    </div>
  </section>
  <!-- <ContentMedia imgSrc="/accessible-components.webp">
    <Heading level="h2">Maintaining an old website?</Heading>
    <p class="text-2xl">
      This theme provides plenty of tried and tested Accessible Astro Components. Some are native to this theme and a
      lot of others are integrated using a <Link
        isExternal
        href="https://github.com/incluud/accessible-astro-components">separate package</Link
      >. They'll get you up and running in building an accessible solution for your visitors.
    </p>
  </ContentMedia>
  <ContentMedia imgSrc="/wcag-compliant.webp" reverseImg={true}>
    <Heading level="h2">Want a new website?</Heading>
    <p class="text-2xl">
      Using semantic HTML, landmarks, skip links, screen reader friendly content, aria-labels, keyboard accessible
      navigation and components, clear outlines and tab indicators and the right color contrast, you're more certain of
      reaching WCAG AA compliance.
    </p>
  </ContentMedia> -->
  <FeaturedProjects />
  <section class="mt-24 mb-32 md:mt-32">
    <div class="container grid grid-cols-1 gap-12">
      <div class="flex flex-col items-center gap-4">
        <Heading class="mb-8 text-center" level="h2">Let's Begin.</Heading>
        <Link
          href="mailto:ben@benvent.com?subject=Project%20Inquiry&body=Hi%20Ben%2C%0A%0AI%27d%20like%20to%20discuss%20a%20project.%20Here%27s%20what%20I%27m%20looking%20for%3A%0A%0A"
          isButton
          type="primary"
          animateOnHover
          animationType="boop"
        >
          <Icon aria-hidden="true" name="lucide:mail" size="1.5rem" />
          Get In Touch
        </Link>
      </div>
      <!-- <div class="space-content">
        <Accordion>
          <AccordionItem name="exclusive" title="What is WCAG and why is it important?" open>
            <p>
              WCAG (Web Content Accessibility Guidelines) is a set of internationally recognized standards for web
              accessibility. Following WCAG ensures your website is usable by people with various disabilities,
              including visual, auditory, physical, and cognitive impairments. It's important not just for
              accessibility, but also for legal compliance, SEO, and reaching a wider audience.
            </p>
          </AccordionItem>
          <AccordionItem name="exclusive" title="What's the difference between ARIA labels and alt text?">
            <p>
              Alt text is specifically for describing images to screen reader users, while ARIA labels (aria-label,
              aria-labelledby) can describe any element on a page. Alt text is HTML's native way to provide alternative
              text for images, while ARIA labels are part of the ARIA specification that helps make dynamic content and
              advanced UI controls more accessible.
            </p>
          </AccordionItem>
          <AccordionItem name="exclusive" title="Why is keyboard navigation important?">
            <p>
              Keyboard navigation is essential for users who can't use a mouse, including people with motor
              disabilities, visual impairments, or those who simply prefer keyboard controls. A website should be fully
              operable using only a keyboard, with visible focus indicators and logical tab order. This includes being
              able to access all interactive elements and navigate through content efficiently.
            </p>
          </AccordionItem>
          <AccordionItem name="exclusive" title="What is a sufficient color contrast ratio?">
            <p>
              According to WCAG 2.2 AA standards, text should have a minimum contrast ratio of 4.5:1 against its
              background for regular text, and 3:1 for large text (18pt or 14pt bold). For non-text elements like icons
              or buttons, a minimum ratio of 3:1 is required. This ensures content is readable for users with visual
              impairments or color blindness.
            </p>
          </AccordionItem>
          <AccordionItem name="exclusive" title="How do I make custom components accessible?">
            <p>
              To make custom components accessible, focus on these key aspects: use semantic HTML where possible,
              implement proper keyboard support, add appropriate ARIA attributes, manage focus when needed, and ensure
              adequate color contrast. Always test with screen readers and keyboard navigation. Consider using
              established design patterns from the <Link href="https://www.w3.org/WAI/ARIA/apg/patterns/"
                >ARIA Authoring Practices Guide</Link
              >.
            </p>
          </AccordionItem>
        </Accordion>
      </div> -->
    </div>
  </section>
</DefaultLayout>

<style>
  .avatar {
    padding: var(--space-s);
  }
</style>
