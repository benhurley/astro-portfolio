---
import { Link } from 'accessible-astro-components'
import { Icon } from 'astro-icon/components'
import { Image } from 'astro:assets'
import heroImage from '../../public/hero-image.webp'

/**
 * Hero Component
 *
 * @description A component that displays a hero section with a title, description, and image
 */
interface Props {
  /**
   * The image to display (imported asset)
   */
  src?: ImageMetadata
}

const { src = heroImage }: Props = Astro.props
---

<section class="hero">
  <div class="container">
    <div class="mt-4 grid grid-cols-1 items-center gap-0 md:mt-16 md:grid-cols-2">
      <div class="image-wrapper">
        <Image
          src={src}
          alt="Hero illustration"
          widths={[200, 400, 800]}
          class="image mx-auto h-auto w-full max-w-[60%]"
          loading="eager"
          quality={100}
        />
      </div>
      <div class="mt-16 flex flex-col items-center gap-8 md:mt-8 md:items-center">
        <h1 class="text-center text-[52px] md:text-center lg:text-[80px]">
          <slot>Let's Fix Your Website</slot>
        </h1>
        <div class="mb-16 flex flex-col gap-3 min-[500px]:flex-row">
          <Link
            href="mailto:ben@benvent.com?subject=Project%20Inquiry&body=Hi%20Ben%2C%0A%0AI%27d%20like%20to%20discuss%20a%20project.%20Here%27s%20what%20I%27m%20looking%20for%3A%0A%0A"
            isButton
            type="primary"
            animateOnHover
            animationType="boop"
          >
            <Icon aria-hidden="true" name="lucide:mail" size="1.5rem" />
            Get In Touch
          </Link>
        </div>
      </div>
    </div>
  </div>
</section>

<style lang="scss">
  h1 {
    text-wrap: unset;
  }

  .image-wrapper {
    position: relative;

    @media screen and (max-width: 90rem) {
      display: none;
    }
  }

  .image-wrapper::before {
    position: absolute;
    z-index: -1;
    inset: 0;
    border-radius: var(--radius-l);
    content: '';
  }

  .text-gradient {
    background: linear-gradient(
      315deg,
      light-dark(var(--color-primary-300), var(--color-secondary-100)) 0%,
      light-dark(var(--color-secondary-300), var(--color-primary-200))
    );
    background-clip: border-box;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }
</style>
